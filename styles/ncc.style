# All Style settings supported by 'ncc'
StructName: '^.*$'
UnionName: '^.*$'
ClassName: '^C.*$'
EnumName: '^.*$'
EnumConstantName: '^.*$'
FunctionName: '^[A-Z].*$'
ParameterName: '^.*$'
TypedefName: '^.*$'
CppMethod: '^.*$'
Namespace: '^.*$'
ConversionFunction: '^.*$'
TemplateTypeParameter: '^.*$'
TemplateNonTypeParameter: '^.*$'
TemplateTemplateParameter: '^.*$'
FunctionTemplate: '^.*$'
ClassTemplate: '^.*$'
ClassTemplatePartialSpecialization: '^.*$'
NamespaceAlias: '^.*$'
UsingDirective: '^.*$' 
UsingDeclaration: '^.*$' 
TypeAliasName: '^.*$' 
ClassAccessSpecifier: '^.*$' 
TypeReference: '^.*$' 
CxxBaseSpecifier: '^.*$' 
TemplateReference: '^.*$' 
NamespaceReference: '^.*$' 
MemberReference: '^.*$' 
LabelReference: '^.*$' 
OverloadedDeclarationReference: '^.*$' 
VariableReference: '^.*$' 
InvalidFile: '^.*$' 
NoDeclarationFound: '^.*$' 
NotImplemented: '^.*$' 
InvalidCode: '^.*$' 
UnexposedExpression: '^.*$' 
DeclarationReferenceExpression: '^.*$' 
MemberReferenceExpression: '^.*$' 
CallExpression: '^.*$' 
BlockExpression: '^.*$' 
IntegerLiteral: '^.*$' 
FloatingLiteral: '^.*$' 
ImaginaryLiteral: '^.*$' 
StringLiteral: '^.*$' 
CharacterLiteral: '^.*$' 
ParenExpression: '^.*$' 
UnaryOperator: '^.*$' 
ArraySubscriptExpression: '^.*$' 
BinaryOperator: '^.*$' 
CompoundAssignmentOperator: '^.*$' 
ConditionalOperator: '^.*$' 
CstyleCastExpression: '^.*$' 
CompoundLiteralExpression: '^.*$' 
InitListExpression: '^.*$' 
AddrLabelExpression: '^.*$' 
StatementExpression: '^.*$' 
GenericSelectionExpression: '^.*$' 
GnuNullExpression: '^.*$' 
CxxStaticCastExpression: '^.*$' 
CxxDynamicCastExpression: '^.*$' 
CxxReinterpretCastExpression: '^.*$' 
CxxConstCastExpression: '^.*$' 
CxxFunctionalCastExpression: '^.*$' 
CxxTypeidExpression: '^.*$' 
CxxBoolLiteralExpression: '^.*$' 
CxxNullPointerLiteralExpression: '^.*$' 
CxxThisExpression: '^.*$' 
CxxThrowExpression: '^.*$' 
CxxNewExpression: '^.*$' 
CxxDeleteExpression: '^.*$' 
CxxUnaryExpression: '^.*$' 
PackExpansionExpression: '^.*$' 
SizeOfPackExpression: '^.*$' 
LambdaExpression: '^.*$' 
ObjectBoolLiteralExpression: '^.*$' 
ObjectSelfExpression: '^.*$' 
UnexposedStatement: '^.*$' 
LabelStatement: '^.*$' 
CompoundStatement: '^.*$' 
CaseStatement: '^.*$' 
DefaultStatement: '^.*$' 
IfStatement: '^.*$' 
SwitchStatement: '^.*$' 
WhileStatement: '^.*$' 
DoStatement: '^.*$' 
ForStatement: '^.*$' 
GotoStatement: '^.*$' 
IndirectGotoStatement: '^.*$' 
ContinueStatement: '^.*$' 
BreakStatement: '^.*$' 
ReturnStatement: '^.*$' 
AsmStatement: '^.*$' 
CxxCatchStatement: '^.*$' 
CxxTryStatement: '^.*$' 
CxxForRangeStatement: '^.*$' 
MsAsmStatement: '^.*$' 
NullStatement: '^.*$' 
DeclarationStatement: '^.*$' 
TranslationUnit: '^.*$' 
UnexposedAttribute: '^.*$' 
CxxFinalAttribute: '^.*$' 
CxxOverrideAttribute: '^.*$' 
AnnotateAttribute: '^.*$' 
AsmLabelAttribute: '^.*$' 
PackedAttribute: '^.*$' 
PureAttribute: '^.*$' 
ConstAttribute: '^.*$' 
NoduplicateAttribute: '^.*$' 
PreprocessingDirective: '^.*$' 
MacroDefinition: '^.*$' 
MacroInstantiation: '^.*$' 
InclusionDirective: '^.*$' 
TypeAliasTeplateDeclaration: '^.*$' 
VariableName:
    ScopePrefix:
        Global: ''
        Static: ''
        ClassMemberPrivate: ''
        ClassMemberProtected: ''
        ClassMemberPublic: ''
    DataTypePrefix:
        String: ''
        Integer: ''
        Bool: ''
        Pointer: ''
    Pattern: '^.*$'
